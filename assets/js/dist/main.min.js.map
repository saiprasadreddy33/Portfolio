{"version":3,"sources":["main.js"],"names":["showMenu","toggleId","navId","toggle","document","getElementById","nav","addEventListener","tabs","querySelectorAll","tabContents","tab","forEach","querySelector","dataset","target","tabContent","classList","remove","add","slider","sunIcon","body","moonIcon","prefersDarkMode","window","matchMedia","matches","style","display","darkModeToggle","transform","contains","navLink","linkAction","sections","scrollY","pageYOffset","sectionHeight","sectionTop","current","offsetTop","sectionId","getAttribute","scrollActive","duration","ScrollReveal","delay","distance","reveal","sr","interval"],"mappings":"aACA,IAAMA,SAAW,SAACC,EAAUC,GAD5B,IAAAC,EAAAC,SAAAC,eAAAJ,GACMD,EAAAA,SAAWK,eAACJ,GAEdK,GAAMF,GAGFD,EAAOI,iBAAiB,QAAS,WAD5BD,EAAIA,UAAIH,OAAA,WAIhBH,SAAA,aAAA,YAIL,IAAMQ,KAAOJ,SAASK,iBAAiB,iBAFvCT,YAASI,SAAaK,iBAAtB,kBAEAD,KACME,QAAAA,SAAAA,GAEFC,EAACC,iBAAQD,QAAM,WACXJ,IAAAA,EAAiBH,SAASS,cAAKF,EAAAG,QAAAC,QAG/BL,YAAYE,QAAQ,SAAAI,GAChBA,EAAWC,UAAXC,OAA4B,2BAEhCH,EAAOE,UAAcE,IAAA,yBAGjBR,KAAIM,QAAUC,SAAAA,GADlBP,EAAAM,UAAAC,OAAA,2BARJP,EAAAM,UAAAE,IAAA,6BAiBJ,IAAMC,eAAkBP,SAAAA,eAAxB,kBACMQ,KAAOjB,SAAWkB,KAClBC,OAAWnB,SAASS,cAAc,WADlCQ,QAAUjB,SAASS,cAAc,QAIjCW,SAAAA,SAAkBC,cAAA,SAIlBD,gBAAeC,OAAAC,YAAnBD,OAAAC,WAAA,gCAAAC,QAGAP,kBAGFE,KAAAL,UAAAE,IAAA,aALEE,QAAQO,MAAMC,QAAU,SACxBN,SAASK,MAAMC,QAAU,OAK3BC,OAAAA,MAAevB,UAAAA,oBAIba,eAAaW,iBAAiBd,QAAL,WAJ3BK,KAAAL,UAAAd,OAAA,aASAkB,QAAAO,MAAAC,QAAAP,KAAAL,UAAAe,SAAA,aAAA,OAAA,SANET,SAASK,MAAMC,QAAUP,KAAKL,UAAUe,SAAS,aAAe,SAAW,OAO7EZ,OAAMa,MAAU7B,UAASK,KAAAA,UAAiBuB,SAAA,aAA1C,mBAAA,kBAMC,IAAAC,QAAA7B,SAAAK,iBAAA,cACDwB,SAAQrB,aAAeL,SAAiBF,eAAS6B,YAEjDjB,UAAAC,OAAA,QACAe,QAAME,QAAW/B,SAAAA,GAAAA,OAAAA,EAAQG,iBAAR,QAA0B2B,cAGvC,IAAME,SAAUX,SAAOY,iBAAvB,eAGI,SAAMC,eACN,IAAMC,EAAUd,OAAGe,YAFvBL,SAASvB,QAAQ,SAAA4B,GAKVJ,IAAAA,EAAAI,EAAwBJ,aACfG,EAAC1B,EAAc4B,UAAA,GAD3BC,UAEKF,EAAAG,aAAA,MAEJJ,EAAAH,GAAAA,GAAAG,EAAAD,EATLlC,SAAAS,cAAA,sBAAA6B,UAAA,KAAAzB,UAAAE,IAAA,UAQQf,SAASS,cAAc,sBAAwB6B,UAAY,KAAKzB,UAAUC,OAAO,YAO7FO,OAAQlB,iBAAgB,SAAAqC,cAGpBC,IAAAA,GAAQC,aAHY,CAIpBC,OAJoB,MAEpBC,SAAU,OAFdH,SAAA,IAQGI,MAAO,MAEVC,GAAGD,OAAO,6DAAqB,IAAEE,GAAAA,OAAQ,2DAAE,CAAAJ,MAAA,MAAZG,GAA/BD,OAAA,qBAAA,CAAAE,SAAA,MACAD,GAAGD,OAAO,6CAAV,CAAuDE,SAAA","file":"main.min.js","sourcesContent":["/*===== MENU SHOW =====*/ \r\nconst showMenu = (toggleId, navId) =>{\r\n    const toggle = document.getElementById(toggleId),\r\n    nav = document.getElementById(navId)\r\n\r\n    if(toggle && nav){\r\n        toggle.addEventListener('click', ()=>{\r\n            nav.classList.toggle('show')\r\n        })\r\n    }\r\n}\r\nshowMenu('nav-toggle','nav-menu')\r\n\r\nconst tabs = document.querySelectorAll('[data-target]'),\r\n      tabContents = document.querySelectorAll('[data-content]')\r\n\r\ntabs.forEach(tab =>{\r\n    tab.addEventListener('click', () =>{\r\n        const target = document.querySelector(tab.dataset.target)\r\n\r\n        tabContents.forEach(tabContent =>{\r\n            tabContent.classList.remove('qualification__active')\r\n        })\r\n        target.classList.add('qualification__active')\r\n\r\n        tabs.forEach(tab =>{\r\n            tab.classList.remove('qualification__active')\r\n        })\r\n        tab.classList.add('qualification__active')\r\n    })\r\n})\r\n\r\nconst darkModeToggle = document.getElementById('darkModeToggle');\r\nconst body = document.body;\r\nconst slider = document.querySelector('.slider');\r\nconst sunIcon = document.querySelector('.sun');\r\nconst moonIcon = document.querySelector('.moon');\r\n\r\n// Check if the user has a preference for dark mode\r\nconst prefersDarkMode = window.matchMedia && window.matchMedia('(prefers-color-scheme: dark)').matches;\r\n\r\n// Set initial mode based on user preference\r\nif (prefersDarkMode) {\r\n  body.classList.add('dark-mode');\r\n  sunIcon.style.display = 'inline';\r\n  moonIcon.style.display = 'none';\r\n  slider.style.transform = 'translateX(25px)';\r\n}\r\n\r\n// Toggle between dark and light mode with slider animation\r\ndarkModeToggle.addEventListener('click', () => {\r\n  body.classList.toggle('dark-mode');\r\n  sunIcon.style.display = body.classList.contains('dark-mode') ? 'none' : 'inline';\r\n  moonIcon.style.display = body.classList.contains('dark-mode') ? 'inline' : 'none';\r\n  slider.style.transform = body.classList.contains('dark-mode') ? 'translateX(25px)' : 'translateX(0)';\r\n});\r\n\r\n\r\n\r\n/*==================== REMOVE MENU MOBILE ====================*/\r\nconst navLink = document.querySelectorAll('.nav__link')\r\n\r\nfunction linkAction(){\r\n    const navMenu = document.getElementById('nav-menu')\r\n    // When we click on each nav__link, we remove the show-menu class\r\n    navMenu.classList.remove('show')\r\n}\r\nnavLink.forEach(n => n.addEventListener('click', linkAction))\r\n\r\n/*==================== SCROLL SECTIONS ACTIVE LINK ====================*/\r\nconst sections = document.querySelectorAll('section[id]')\r\n\r\nfunction scrollActive(){\r\n    const scrollY = window.pageYOffset\r\n\r\n    sections.forEach(current =>{\r\n        const sectionHeight = current.offsetHeight\r\n        const sectionTop = current.offsetTop - 50;\r\n        sectionId = current.getAttribute('id')\r\n\r\n        if(scrollY > sectionTop && scrollY <= sectionTop + sectionHeight){\r\n            document.querySelector('.nav__menu a[href*=' + sectionId + ']').classList.add('active')\r\n        }else{\r\n            document.querySelector('.nav__menu a[href*=' + sectionId + ']').classList.remove('active')\r\n        }\r\n    })\r\n}\r\nwindow.addEventListener('scroll', scrollActive)\r\n\r\n/*===== SCROLL REVEAL ANIMATION =====*/\r\nconst sr = ScrollReveal({\r\n    origin: 'top',\r\n    distance: '60px',\r\n    duration: 2000,\r\n    delay: 200,\r\n//     reset: true\r\n});\r\n\r\nsr.reveal('.home__data, .about__img, .skills__subtitle, .skills__text',{}); \r\nsr.reveal('.home__img, .about__subtitle, .about__text, .skills__img',{delay: 400}); \r\nsr.reveal('.home__social-icon',{ interval: 200}); \r\nsr.reveal('.skills__data, .work__img, .contact__input',{interval: 200}); \r\n"]}